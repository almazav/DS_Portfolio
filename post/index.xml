<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Alejandro Maza V.</title>
    <link>https://almazav.github.io/DS_Portfolio/post/</link>
    <description>Recent content in Projects on Alejandro Maza V.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate><atom:link href="https://almazav.github.io/DS_Portfolio/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>USA Election Automated Dashboard</title>
      <link>https://almazav.github.io/DS_Portfolio/post/project-4/</link>
      <pubDate>Sun, 01 Nov 2020 11:00:59 -0400</pubDate>
      
      <guid>https://almazav.github.io/DS_Portfolio/post/project-4/</guid>
      <description>Data was obtained from <a href="https://eu.usatoday.com/elections/results/race/2020-11-03-presidential/">https://eu.usatoday.com/elections/results/race/2020-11-03-presidential/</a>, using beautifulsoup. After extraction the data was modifyed to take the desired form. A s3 bucket was created in AWS. Dataframe in the final form was uploded to the AWS s3 bucket for further extraction. An EC2 AWS insatnce was created. The previous code was uploaded to the previously created EC2 instance and run in schedule using a cron expression. Finally, a Dashboard was created and uploaded to heroku <a href="https://usa-election-graphs.herokuapp.com/">https://usa-election-graphs.herokuapp.com/</description>
    </item>
    
    <item>
      <title>Dog Breed Classification</title>
      <link>https://almazav.github.io/DS_Portfolio/post/project-3/</link>
      <pubDate>Thu, 11 Jun 2020 11:00:59 -0400</pubDate>
      
      <guid>https://almazav.github.io/DS_Portfolio/post/project-3/</guid>
      <description>Data was downloaded from Kaggle dog breed identification competition. There are 120 dog breeds(120 different classes), with more than 10,000 images for training and more than 10,000 for testing. This Project was done using TensorFlow, TensorFlow hub and an GPU. The training of the model was done with a pre-existing keras model. An analysis to check the model accuracy for each breed of dog was performed. Test Data was uploaded to kaggle.</description>
    </item>
    
    <item>
      <title>Bulldozer Price Prediction</title>
      <link>https://almazav.github.io/DS_Portfolio/post/project-2/</link>
      <pubDate>Fri, 15 May 2020 11:00:59 -0400</pubDate>
      
      <guid>https://almazav.github.io/DS_Portfolio/post/project-2/</guid>
      <description>Data was downloaded from Kaggle Bluebook for Bulldozers competition. The evaluation metric for this competition is the RMSLE (root mean squared log error) between the actual and predicted auction prices. Data was shaped in the correct format dealing with, missing values and cetegorical data. A Random Forest Regressor was used after parameter Tunning a RMSLE of 0.1447 was obtained A feature importance analysis was done in oreder to undertand the most important factos afecting the bulldozer price.</description>
    </item>
    
    <item>
      <title>Heart Disease Prediction  </title>
      <link>https://almazav.github.io/DS_Portfolio/post/project-1/</link>
      <pubDate>Thu, 09 Apr 2020 10:58:08 -0400</pubDate>
      
      <guid>https://almazav.github.io/DS_Portfolio/post/project-1/</guid>
      <description>Using Kaggle data from the UCI Machine Learning repository, various Scikit-Learn models were craeated in order to assess wich model give us the best prediction. The models used were Logistic Regression, KNN, and Random Forest Classifier. The model with the greates Accuracy was Logistic Regression. After Hyperparameter Tuning the model Accuracy was of 88 percent. Evaluation of Precision, Recall, F1 was done along with Accuracy. A Feature importance evaluation of the given parameters was done in order to undertsand triggers for heart disease    Model Accuracy   link to github repository</description>
    </item>
    
  </channel>
</rss>
